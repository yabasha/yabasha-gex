import { describe, expect, it } from 'vitest'

import type { Report } from './types.js'

import { formatReport, ValidationError } from './index.js'

describe('library API', () => {
  const mockReport: Report = {
    report_version: '1.0',
    timestamp: '2025-01-13T12:00:00.000Z',
    tool_version: '0.3.2',
    global_packages: [],
    local_dependencies: [],
    local_dev_dependencies: [],
  }

  describe('formatReport', () => {
    it('should format report as JSON', () => {
      const result = formatReport(mockReport, 'json')
      const parsed = JSON.parse(result)
      expect(parsed.report_version).toBe('1.0')
    })

    it('should format report as Markdown', () => {
      const result = formatReport(mockReport, 'md')
      expect(result).toContain('# GEX Report')
      expect(result).toContain('_Generated by GEX_')
    })

    it('should throw ValidationError for invalid format', () => {
      expect(() => formatReport(mockReport, 'html' as any)).toThrow(ValidationError)
    })
  })

  describe('ValidationError export', () => {
    it('should export ValidationError class', () => {
      const error = new ValidationError('test')
      expect(error.name).toBe('ValidationError')
      expect(error.message).toBe('test')
    })
  })
})
